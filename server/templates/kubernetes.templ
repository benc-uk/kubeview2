package templates

import "github.com/benc-uk/kubeview2/server/types"

// This is rendered once the list of namespaces is loaded from /namespaces endpoint
templ NamespacePicker(nameSpaces []string) {
	<select hx-get="load" hx-on::before-send="reset()" name="namespace" hx-target="#dummy" hx-indicator="#spinner">
		<option disabled selected>Choose a namespace</option>
		for _, item := range nameSpaces {
			<option value={ item }>{ item }</option>
		}
	</select>
}

// This is rendered when the /load endpoint is hit and the namespace is selected
// It will pass the namespace data to the client side to be rendered in the main view
templ PassNamespaceData(ns string, data types.NamespaceData) {
	<div id="mainView" hx-swap-oob="true"></div>
	// This is almost true magic
	// Calls a JS function, on the client side, how? Don't ask...
	@templ.JSFuncCall("namespaceLoaded", ns, data)
}

// This is rendered when no data is available for the selected namespace
templ NoData(ns string) {
	<div hx-swap-oob="true" id="mainView">
		<div class="notification is-dark mx-5 mt-5">
			<p class="title is-3">No data available</p>
			<p>Try selecting a different namespace</p>
		</div>
	</div>
	<script>
		window.history.replaceState({}, '', `?ns={{ ns }}`);
		console.log("ðŸ«™ No data available for namespace {{ ns }}");
	</script>
}
