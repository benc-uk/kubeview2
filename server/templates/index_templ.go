// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Index(urlNamespace string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<html lang=\"en\" data-theme=\"dark\"><head>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = htmlHeader().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</head><body x-data=\"mainApp\"><input type=\"hidden\" name=\"namespace\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(urlNamespace)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `server/templates/index.templ`, Line: 9, Col: 61}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\"> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if urlNamespace != "" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<div hx-get=\"fetchData\" hx-include=\"[name=&#39;namespace&#39;]\" hx-indicator=\"#spinner\" hx-trigger=\"load\"></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<nav class=\"navbar is-dark\" role=\"navigation\" @htmx:error=\"htmxError(event)\"><div class=\"navbar-brand\"><a class=\"navbar-item\" href=\"/\"><img src=\"public/img/icon.png\" alt=\"Logo\" width=\"32\" height=\"32\"> <span class=\"is-hidden-mobile is-size-4 has-text-weight-semibold\">KubeView</span></a></div><div class=\"navbar-menu is-active\"><div class=\"navbar-start\"><div class=\"navbar-item\"><form><div class=\"field\"><!-- This HTMX request starts everything --><div class=\"select\" hx-get=\"namespaces\" hx-include=\"[name=&#39;namespace&#39;]\" hx-trigger=\"load\" id=\"namespaceSelect\"><select><option value=\"\" selected disabled>ðŸ”ƒ Loading...</option></select></div><button class=\"button is-link\" hx-get=\"namespaces\" hx-target=\"#namespaceSelect\" hx-indicator=\"#spinner\"><span class=\"icon\"><i class=\"fas fa-rotate\"></i></span></button></div></form><button class=\"button is-primary\" @click=\"toolbarCoseLayout()\"><span class=\"icon\"><i class=\"fas fa-circle-nodes\"></i></span></button> <button class=\"button is-primary\" @click=\"toolbarFit()\"><span class=\"icon\"><i class=\"fas fa-expand\"></i></span></button><div id=\"spinner\"><img src=\"public/img/spinner.svg\" width=\"40\" height=\"40\" class=\"htmx-indicator\"></div></div></div><div class=\"navbar-end\"><div class=\"navbar-item\"><div class=\"buttons\"><div class=\"tag is-warning is-medium\" id=\"eventStatusIcon\"><span class=\"icon\"><i class=\"fas fa-plug\"></i></span>&nbsp;Status</div><button class=\"button is-primary\" hx-get=\"showConfig\" hx-target=\"#dialogs\" hx-swap=\"append\" hx-trigger=\"click\"><span class=\"icon\"><i class=\"fas fa-wrench\"></i></span></button></div></div></div></div></nav><div class=\"notification is-danger mx-5 mt-5\" x-show=\"errorMessage\" x-cloak><p class=\"title is-3\">ðŸ’€ A terrible thing happened!</p><p x-text=\"errorMessage\"></p><button class=\"button is-light\" @click=\"window.location.reload()\">Reload</button></div><!-- content will be swapped in here to replace this notification --><div class=\"notification is-success mx-5 mt-5\" id=\"welcome\" :class=\"{&#39;is-hidden&#39;: window.location.search != &#39;&#39;}\" x-cloak><p class=\"title is-3\">Welcome to KubeView</p><p>Choose a namespace from the dropdown to view resources</p></div><div id=\"mainView\" x-show=\"!errorMessage\" x-cloak><!-- This is the main view where the cytoscape graph is shown --></div><div id=\"dummy\" class=\"is-hidden\"><!-- This is used to trick the HTMX swap nothing is ever shown here --></div><div id=\"dialogs\"><!-- Dialog boxes here --></div><!-- This is the info panel that shows resource details --><article class=\"panel is-link\" id=\"infoPanel\" x-transition:enter=\"slidein\" x-transition:leave=\"slideout\" x-show=\"panelOpen\" x-cloak><p class=\"panel-heading py-2\"><img :src=\"`public/img/res/${panelData.icon}.svg`\" width=\"32\" height=\"32\" style=\"vertical-align: middle;\"> <span x-text=\"panelData.kind\" style=\"vertical-align: middle;\"></span></p><section><div class=\"panel-block\"><button class=\"button is-small is-primary\" :class=\"{&#39;is-outlined&#39;:!labelsShown}\" @click=\"labelsShown=!labelsShown\">Labels</button></div><!-- Labels --><template x-for=\"(value, label) in panelData.labels\" :key=\"label\"><div class=\"panel-block py-0\" x-show=\"labelsShown\"><div class=\"py-1 has-text-weight-bold\" x-text=\"label\"></div><div class=\"py-1\" x-text=\"`: ${value}`\"></div></div></template><!-- Properties --><div class=\"panel-block has-background-dark py-1\"><label class=\"label\">Properties</label></div><template x-for=\"(value, prop) in panelData.props\" :key=\"prop\"><div class=\"panel-block py-0\"><div class=\"py-1 has-text-weight-bold property\" x-text=\"prop\"></div><div class=\"py-1\" x-text=\"value\"></div></div></template><!-- Containers (pods only) --><template x-for=\"(cont, name) in panelData.containers\" :key=\"name\"><div><div class=\"panel-block has-background-dark py-1\"><label class=\"label\" x-text=\"`Container: ${name}`\"></label></div><template x-for=\"(value, prop) in cont\" :key=\"prop\"><div class=\"panel-block py-0\"><div class=\"py-1 has-text-weight-bold property\" x-text=\"prop\"></div><div class=\"py-1\" x-text=\"value\"></div></div></template></div></template></section></article></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func htmlHeader() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1, maximum-scale=1\"><title>KubeView v2</title><link rel=\"icon\" href=\"public/img/icon.png\" type=\"image/png\"><link rel=\"stylesheet\" href=\"public/ext/bulma.min.css\"><link rel=\"stylesheet\" href=\"public/css/main.css\"><script src=\"public/ext/htmx.min.js\"></script><link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css\"><!-- Main app script and entry point --><script src=\"public/js/main.js\" type=\"module\"></script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
